/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hospitaldatabaseapplication;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Elvis
 */
public class AdminPanelFrame extends javax.swing.JFrame {

    /**
     * Creates new form AdminPanelFrame
     */
    public AdminPanelFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PatientTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        AppointmentTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        DoctorTable = new javax.swing.JTable();
        BackButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        RefreshPatientTable = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        InsertPatient = new javax.swing.JButton();
        UpdatePatient = new javax.swing.JButton();
        DeletePatient = new javax.swing.JButton();
        txtPatientId = new javax.swing.JTextField();
        TxtInsuranceCompany = new javax.swing.JTextField();
        TxtPatientLastName = new javax.swing.JTextField();
        TxtPatientFirstName = new javax.swing.JTextField();
        TxtAddress = new javax.swing.JTextField();
        InsertAppointment = new javax.swing.JButton();
        UpdateAppointment = new javax.swing.JButton();
        DeleteAppointment = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        TxtAppointmentID = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        TxtInsuranceID = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        TxtDoctorID = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        TxtDateTime = new javax.swing.JTextField();
        RefreshAppointmentTable = new javax.swing.JButton();
        InsertDoctor = new javax.swing.JButton();
        UpdateDoctor = new javax.swing.JButton();
        DeleteDoctor = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        TxtDoctorId = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        TxtDoctorLastName = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        TxtDoctorFirstName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        TxtSpecialization = new javax.swing.JTextField();
        RefreshDoctorTable = new javax.swing.JButton();
        TxtPhoneNumber = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel1.setText("Admin Panel");

        PatientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Insurance ID", "Insurance Company", "Last Name", "First Name", "Phone Number", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(PatientTable);
        if (PatientTable.getColumnModel().getColumnCount() > 0) {
            PatientTable.getColumnModel().getColumn(0).setResizable(false);
            PatientTable.getColumnModel().getColumn(1).setResizable(false);
            PatientTable.getColumnModel().getColumn(2).setResizable(false);
            PatientTable.getColumnModel().getColumn(3).setResizable(false);
            PatientTable.getColumnModel().getColumn(4).setResizable(false);
            PatientTable.getColumnModel().getColumn(5).setResizable(false);
        }

        AppointmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Appointment ID", "Insurance ID", "Doctor ID", "Date & Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(AppointmentTable);
        if (AppointmentTable.getColumnModel().getColumnCount() > 0) {
            AppointmentTable.getColumnModel().getColumn(0).setResizable(false);
            AppointmentTable.getColumnModel().getColumn(1).setResizable(false);
            AppointmentTable.getColumnModel().getColumn(2).setResizable(false);
            AppointmentTable.getColumnModel().getColumn(3).setResizable(false);
        }

        DoctorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor ID", "Last Name", "First Name", "Specialization"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(DoctorTable);
        if (DoctorTable.getColumnModel().getColumnCount() > 0) {
            DoctorTable.getColumnModel().getColumn(0).setResizable(false);
            DoctorTable.getColumnModel().getColumn(1).setResizable(false);
            DoctorTable.getColumnModel().getColumn(2).setResizable(false);
            DoctorTable.getColumnModel().getColumn(3).setResizable(false);
        }

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Doctor");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Patient");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Appointment");

        RefreshPatientTable.setText("Refresh Patient Table");
        RefreshPatientTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshPatientTableActionPerformed(evt);
            }
        });

        jLabel5.setText("Insurance ID");

        jLabel6.setText("Insurance Company");

        jLabel9.setText("Address");

        InsertPatient.setText("Insert Patient");
        InsertPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertPatientActionPerformed(evt);
            }
        });

        UpdatePatient.setText("Update Patient");
        UpdatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatePatientActionPerformed(evt);
            }
        });

        DeletePatient.setText("Delete Patient");
        DeletePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletePatientActionPerformed(evt);
            }
        });

        InsertAppointment.setText("Insert Appointment");
        InsertAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertAppointmentActionPerformed(evt);
            }
        });

        UpdateAppointment.setText("Update Appointment");
        UpdateAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateAppointmentActionPerformed(evt);
            }
        });

        DeleteAppointment.setText("Delete Appointment");
        DeleteAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAppointmentActionPerformed(evt);
            }
        });

        jLabel10.setText("Appointment ID");

        jLabel11.setText("Insurance ID");

        jLabel12.setText("Doctor ID");

        jLabel13.setText("Date & Time");

        RefreshAppointmentTable.setText("Refresh Appointment Table");
        RefreshAppointmentTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshAppointmentTableActionPerformed(evt);
            }
        });

        InsertDoctor.setText("Insert Doctor");
        InsertDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertDoctorActionPerformed(evt);
            }
        });

        UpdateDoctor.setText("Update Doctor");
        UpdateDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateDoctorActionPerformed(evt);
            }
        });

        DeleteDoctor.setText("Delete Doctor");
        DeleteDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteDoctorActionPerformed(evt);
            }
        });

        jLabel14.setText("Doctor ID");

        jLabel15.setText("Last Name");

        TxtDoctorLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtDoctorLastNameActionPerformed(evt);
            }
        });

        jLabel16.setText("First Name");

        jLabel17.setText("Specialization");

        RefreshDoctorTable.setText("Refresh Doctor Table");
        RefreshDoctorTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshDoctorTableActionPerformed(evt);
            }
        });

        jLabel18.setText("Phone Number");

        jLabel19.setText("Last Name");

        jLabel20.setText("First Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(InsertPatient)
                                        .addGap(36, 36, 36)
                                        .addComponent(UpdatePatient)
                                        .addGap(36, 36, 36)
                                        .addComponent(DeletePatient))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel18)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(TxtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(TxtInsuranceCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addGap(72, 72, 72)
                                            .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(15, 15, 15)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel19)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(TxtPatientLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel9)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addGap(6, 6, 6)
                                                            .addComponent(jLabel20)))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(TxtPatientFirstName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(TxtAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(163, 163, 163)
                                        .addComponent(jLabel3))))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(RefreshPatientTable)))
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BackButton)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(RefreshAppointmentTable)
                                .addGap(222, 222, 222))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(85, 85, 85)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel13)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(TxtDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel12)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(TxtDoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabel11)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(TxtInsuranceID, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabel10)
                                                    .addGap(72, 72, 72)
                                                    .addComponent(TxtAppointmentID, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(InsertAppointment)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(UpdateAppointment)
                                            .addGap(18, 18, 18)
                                            .addComponent(DeleteAppointment)
                                            .addGap(13, 13, 13)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(224, 224, 224)
                                        .addComponent(jLabel4)))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(103, 103, 103))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(InsertDoctor)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(UpdateDoctor)
                                        .addGap(45, 45, 45)
                                        .addComponent(DeleteDoctor))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(TxtSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel16)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(TxtDoctorFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(TxtDoctorLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel14)
                                                .addGap(72, 72, 72)
                                                .addComponent(TxtDoctorId, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(RefreshDoctorTable)
                                .addGap(170, 170, 170))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(TxtDoctorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(TxtDoctorLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(TxtDoctorFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(TxtSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InsertDoctor)
                            .addComponent(UpdateDoctor)
                            .addComponent(DeleteDoctor)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(BackButton))
                            .addComponent(jLabel1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(TxtAppointmentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(TxtInsuranceID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(TxtDoctorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(TxtDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(InsertAppointment)
                                    .addComponent(UpdateAppointment)
                                    .addComponent(DeleteAppointment)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TxtInsuranceCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TxtPatientLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TxtPatientFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20))
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TxtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TxtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(InsertPatient)
                                    .addComponent(UpdatePatient)
                                    .addComponent(DeletePatient))))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RefreshPatientTable)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RefreshDoctorTable))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RefreshAppointmentTable)))
                        .addGap(15, 15, 15))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        this.setVisible(false);
        
        AdminLogin aL = new AdminLogin();
        aL.setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void RefreshPatientTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshPatientTableActionPerformed
        int c = 0;

        HospitalConnection connection1 = new HospitalConnection();

        ResultSet resultset = connection1.SelectStatement("*", "Patient");

        try {

            ResultSetMetaData Rss = resultset.getMetaData();

            c = Rss.getColumnCount();

            DefaultTableModel Df = (DefaultTableModel)PatientTable.getModel();

            Df.setRowCount(c);

            while(resultset.next()){
                Vector v2 = new Vector();

                for(int a = 1; a <= c; a++){

                    v2.add(resultset.getString("Insurance_Id"));
                    v2.add(resultset.getString("Insurance_Company"));
                    v2.add(resultset.getString("Last_Name"));
                    v2.add(resultset.getString("First_Name"));
                    v2.add(resultset.getString("Phone_Num"));
                    v2.add(resultset.getString("Address"));
                }

                Df.addRow(v2);
            }

        } catch (SQLException ex) {
            Logger.getLogger(AdminPanelFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        connection1.EndConnection();
    }//GEN-LAST:event_RefreshPatientTableActionPerformed

    private void RefreshAppointmentTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshAppointmentTableActionPerformed
        int c = 0;

        HospitalConnection connection1 = new HospitalConnection();

        ResultSet resultset = connection1.SelectStatement("*", "Appointment");

        try {

            ResultSetMetaData Rss = resultset.getMetaData();

            c = Rss.getColumnCount();

            DefaultTableModel Df = (DefaultTableModel)AppointmentTable.getModel();

            Df.setRowCount(c);

            while(resultset.next()){
                Vector v2 = new Vector();

                for(int a = 1; a <= c; a++){

                    v2.add(resultset.getString("Appointment_ID"));
                    v2.add(resultset.getString("Insurance_ID"));
                    v2.add(resultset.getString("Doc_id"));
                    v2.add(resultset.getString("Date_Time"));
                }

                Df.addRow(v2);
            }

        } catch (SQLException ex) {
            Logger.getLogger(AdminPanelFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        connection1.EndConnection();
    }//GEN-LAST:event_RefreshAppointmentTableActionPerformed

    private void RefreshDoctorTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshDoctorTableActionPerformed
        int c = 0;

        HospitalConnection connection1 = new HospitalConnection();

        ResultSet resultset = connection1.SelectStatement("*", "Doctor");

        try {

            ResultSetMetaData Rss = resultset.getMetaData();

            c = Rss.getColumnCount();

            DefaultTableModel Df = (DefaultTableModel)DoctorTable.getModel();

            Df.setRowCount(c);

            while(resultset.next()){
                Vector v2 = new Vector();

                for(int a = 1; a <= c; a++){

                    v2.add(resultset.getString("Doc_ID"));
                    v2.add(resultset.getString("Last_Name"));
                    v2.add(resultset.getString("First_Name"));
                    v2.add(resultset.getString("Specialization"));
                }

                Df.addRow(v2);
            }

        } catch (SQLException ex) {
            Logger.getLogger(AdminPanelFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        connection1.EndConnection();
    }//GEN-LAST:event_RefreshDoctorTableActionPerformed

    private void InsertPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertPatientActionPerformed
        String insuranceId = txtPatientId.getText();
        String insuranceCompany = TxtInsuranceCompany.getText();
        String lastName = TxtPatientLastName.getText();
        String firstName = TxtPatientFirstName.getText();
        String address = TxtAddress.getText();
        String phoneNumber = TxtPhoneNumber.getText();
        
        insuranceId = "'"+insuranceId+"'";
        insuranceCompany = "'"+insuranceCompany+"'";
        lastName = "'"+lastName+"'";
        firstName = "'"+firstName+"'";
        address = "'"+address+"'";
        phoneNumber = "'"+phoneNumber+"'";
        
        String values = insuranceId+","+insuranceCompany+","+lastName+","+firstName+","+phoneNumber+","+address;
        
        HospitalConnection connection1 = new HospitalConnection();
        
        connection1.InsertStatement("patient", values);
        
        RecordAddedFrame addFrame = new RecordAddedFrame();
        
        addFrame.setVisible(true);
        
        txtPatientId.setText("");
        TxtInsuranceCompany.setText("");
        TxtPatientLastName.setText("");
        TxtPatientFirstName.setText("");
        TxtAddress.setText("");
        TxtPhoneNumber.setText("");
    }//GEN-LAST:event_InsertPatientActionPerformed

    private void UpdatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatePatientActionPerformed
        String insuranceId = txtPatientId.getText();
        String insuranceCompany = TxtInsuranceCompany.getText();
        String lastName = TxtPatientLastName.getText();
        String firstName = TxtPatientFirstName.getText();
        String address = TxtAddress.getText();
        String phoneNumber = TxtPhoneNumber.getText();
        
        insuranceId = "'"+insuranceId+"'";
        insuranceCompany = "'"+insuranceCompany+"'";
        lastName = "'"+lastName+"'";
        firstName = "'"+firstName+"'";
        address = "'"+address+"'";
        phoneNumber = "'"+phoneNumber+"'";
        
        //This string will hold the lines of SQl that go after "SET" in an update statement
        String column_newValue = "insurance_id = "+insuranceId+", insurance_company = "+insuranceCompany+", Last_Name = "+lastName+", First_Name = "+firstName+", Phone_Num = "+phoneNumber+", Address = "+address;
        
        //This string will hold the condition where the update will take place
        String condition = "Insurance_id LIKE "+insuranceId;
        
        HospitalConnection connection1 = new HospitalConnection();
        
        connection1.UpdateStatement("patient", column_newValue, condition);
        
        RecordUpdateFrame updateFrame = new RecordUpdateFrame();
        
        updateFrame.setVisible(true);
        
        txtPatientId.setText("");
        TxtInsuranceCompany.setText("");
        TxtPatientLastName.setText("");
        TxtPatientFirstName.setText("");
        TxtAddress.setText("");
        TxtPhoneNumber.setText("");
    }//GEN-LAST:event_UpdatePatientActionPerformed

    private void DeletePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletePatientActionPerformed
        String insuranceId = txtPatientId.getText();
        
        insuranceId = "'"+insuranceId+"'";
        
        String condition = "insurance_id LIKE "+insuranceId;
        
        HospitalConnection connection1 = new HospitalConnection();
        
        connection1.DeleteStatement("patient", condition);
        
        RecordDeleteFrame deleteFrame = new RecordDeleteFrame();
        
        deleteFrame.setVisible(true);
        
        txtPatientId.setText("");
        TxtInsuranceCompany.setText("");
        TxtPatientLastName.setText("");
        TxtPatientFirstName.setText("");
        TxtAddress.setText("");
        TxtPhoneNumber.setText("");
    }//GEN-LAST:event_DeletePatientActionPerformed

    private void InsertAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertAppointmentActionPerformed
        String appointmentId = TxtAppointmentID.getText();
        String insuranceId = TxtInsuranceID.getText();
        String DoctorId = TxtDoctorID.getText();
        String DateTime = TxtDateTime.getText(); //DateTime does not need to be surrounded by ' '
        
        appointmentId = "'"+appointmentId+"'";
        insuranceId = "'"+insuranceId+"'";
        DoctorId = "'"+DoctorId+"'";
        
        String values = appointmentId+","+insuranceId+","+DoctorId+","+DateTime;
        
        HospitalConnection connection1 = new HospitalConnection();
        
        connection1.InsertStatement("Appointment", values);
        
        RecordAddedFrame addFrame = new RecordAddedFrame();
        
        addFrame.setVisible(true);
        
        TxtAppointmentID.setText("");
        TxtInsuranceID.setText("");
        TxtDoctorID.setText("");
        TxtDateTime.setText("");
    }//GEN-LAST:event_InsertAppointmentActionPerformed

    private void UpdateAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateAppointmentActionPerformed
        String appointmentId = TxtAppointmentID.getText();
        String insuranceId = TxtInsuranceID.getText();
        String DoctorId = TxtDoctorID.getText();
        String DateTime = TxtDateTime.getText(); //DateTime does not need to be surrounded by ' '
        
        appointmentId = "'"+appointmentId+"'";
        insuranceId = "'"+insuranceId+"'";
        DoctorId = "'"+DoctorId+"'";
        
        //This string will hold the lines of SQl that go after "SET" in an update statement
        String column_newValue = "Appointment_Id = "+appointmentId+", Insurance_Id = "+insuranceId+", Doc_Id = "+DoctorId+", Date_Time = "+DateTime;
        
        //This string will hold the condition where the update will take place
        String condition = "Appointment_Id = "+appointmentId;
        
        HospitalConnection connection1 = new HospitalConnection();
        
        connection1.UpdateStatement("Appointment", column_newValue, condition);
        
        RecordUpdateFrame updateFrame = new RecordUpdateFrame();
        
        updateFrame.setVisible(true);
        
        TxtAppointmentID.setText("");
        TxtInsuranceID.setText("");
        TxtDoctorID.setText("");
        TxtDateTime.setText("");
    }//GEN-LAST:event_UpdateAppointmentActionPerformed

    private void DeleteAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAppointmentActionPerformed
        String appointmentId = TxtAppointmentID.getText();
        
        appointmentId = "'"+appointmentId+"'";
        
        String condition = "Appointment_Id = "+appointmentId;
        
        HospitalConnection connection1 = new HospitalConnection();
        
        connection1.DeleteStatement("Appointment", condition);
        
        RecordDeleteFrame deleteFrame = new RecordDeleteFrame();
        
        deleteFrame.setVisible(true);
        
        TxtAppointmentID.setText("");
        TxtInsuranceID.setText("");
        TxtDoctorID.setText("");
        TxtDateTime.setText("");
    }//GEN-LAST:event_DeleteAppointmentActionPerformed

    private void InsertDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertDoctorActionPerformed
        String DoctorId = TxtDoctorId.getText();
        String LastName = TxtDoctorLastName.getText();
        String FirstName = TxtDoctorFirstName.getText();
        String Specialization = TxtSpecialization.getText();
        
        DoctorId = "'"+DoctorId+"'";
        LastName = "'"+LastName+"'";
        FirstName = "'"+FirstName+"'";
        Specialization = "'"+Specialization+"'";
        
        String values = DoctorId+","+LastName+","+FirstName+","+Specialization;
        
        HospitalConnection connection1 = new HospitalConnection();
        
        connection1.InsertStatement("Doctor", values);
        
        RecordAddedFrame addFrame = new RecordAddedFrame();
        
        addFrame.setVisible(true);
        
        TxtDoctorId.setText("");
        TxtDoctorLastName.setText("");
        TxtDoctorFirstName.setText("");
        TxtSpecialization.setText("");
    }//GEN-LAST:event_InsertDoctorActionPerformed

    private void TxtDoctorLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtDoctorLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtDoctorLastNameActionPerformed

    private void UpdateDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateDoctorActionPerformed
        String DoctorId = TxtDoctorId.getText();
        String LastName = TxtDoctorLastName.getText();
        String FirstName = TxtDoctorFirstName.getText();
        String Specialization = TxtSpecialization.getText();
        
        DoctorId = "'"+DoctorId+"'";
        LastName = "'"+LastName+"'";
        FirstName = "'"+FirstName+"'";
        Specialization = "'"+Specialization+"'";
        
        //This string will hold the lines of SQl that go after "SET" in an update statement
        String column_newValue = "Doc_Id = "+DoctorId+", Last_Name = "+LastName+", First_Name = "+FirstName+", Specialization = "+Specialization;
        
        //This string will hold the condition where the update will take place
        String condition = "doc_id = "+DoctorId;
        
        HospitalConnection connection1 = new HospitalConnection();
        
        connection1.UpdateStatement("Doctor", column_newValue, condition);
        
        RecordUpdateFrame updateFrame = new RecordUpdateFrame();
        
        updateFrame.setVisible(true);
        
        TxtDoctorId.setText("");
        TxtDoctorLastName.setText("");
        TxtDoctorFirstName.setText("");
        TxtSpecialization.setText("");
    }//GEN-LAST:event_UpdateDoctorActionPerformed

    private void DeleteDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteDoctorActionPerformed
        String DoctorId = TxtDoctorId.getText();
        
        DoctorId = "'"+DoctorId+"'";
        
        String condition = "Doc_Id = "+DoctorId;
        
        HospitalConnection connection1 = new HospitalConnection();
        
        connection1.DeleteStatement("Doctor", condition);
        
        RecordDeleteFrame deleteFrame = new RecordDeleteFrame();
        
        deleteFrame.setVisible(true);
        
        TxtDoctorId.setText("");
        TxtDoctorLastName.setText("");
        TxtDoctorFirstName.setText("");
        TxtSpecialization.setText("");
    }//GEN-LAST:event_DeleteDoctorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPanelFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPanelFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPanelFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPanelFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPanelFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AppointmentTable;
    private javax.swing.JButton BackButton;
    private javax.swing.JButton DeleteAppointment;
    private javax.swing.JButton DeleteDoctor;
    private javax.swing.JButton DeletePatient;
    private javax.swing.JTable DoctorTable;
    private javax.swing.JButton InsertAppointment;
    private javax.swing.JButton InsertDoctor;
    private javax.swing.JButton InsertPatient;
    private javax.swing.JTable PatientTable;
    private javax.swing.JButton RefreshAppointmentTable;
    private javax.swing.JButton RefreshDoctorTable;
    private javax.swing.JButton RefreshPatientTable;
    private javax.swing.JTextField TxtAddress;
    private javax.swing.JTextField TxtAppointmentID;
    private javax.swing.JTextField TxtDateTime;
    private javax.swing.JTextField TxtDoctorFirstName;
    private javax.swing.JTextField TxtDoctorID;
    private javax.swing.JTextField TxtDoctorId;
    private javax.swing.JTextField TxtDoctorLastName;
    private javax.swing.JTextField TxtInsuranceCompany;
    private javax.swing.JTextField TxtInsuranceID;
    private javax.swing.JTextField TxtPatientFirstName;
    private javax.swing.JTextField TxtPatientLastName;
    private javax.swing.JTextField TxtPhoneNumber;
    private javax.swing.JTextField TxtSpecialization;
    private javax.swing.JButton UpdateAppointment;
    private javax.swing.JButton UpdateDoctor;
    private javax.swing.JButton UpdatePatient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField txtPatientId;
    // End of variables declaration//GEN-END:variables
}
